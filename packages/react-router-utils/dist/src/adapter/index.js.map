{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/adapter/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,wCAAkD;AAG1C,IAAA,QAAQ,GAAuB,UAAE,SAAzB,EAAE,GAAG,GAAkB,UAAE,IAApB,EAAE,KAAK,GAAW,UAAE,MAAb,EAAE,IAAI,GAAK,UAAE,KAAP,CAAQ;AAE1C,gDAAgD;AAChD,0EAA0E;AAE1E,kBAAkB;AAClB,IAAM,YAAY,GAAG,oBAAY,CAAC,GAAG,CAAC,CAAC;AACvC,mCAAmC;AACnC,IAAM,8BAA8B,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;AAE3D,mFAAmF;AACnF,qBAAqB;AACrB,kBAAkB;AAClB,6BAA6B;AAC7B,6BAA6B;AAC7B,iDAAiD;AACjD,2CAA2C;AAC3C,uBAAuB;AACvB,aAAa;AACb,KAAK;AAEL,uDAAuD;AACvD,wDAAwD;AAEjD,IAAM,WAAW,GAAG,UAAC,KAAa;IACvC,OAAA,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,8BAA8B,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;AAA3E,CAA2E,CAAC;AADjE,QAAA,WAAW,eACsD;AAE9E;;;GAGG;AACH,IAAM,aAAa,GAAG,UAAoB,YAAe,IAAK,OAAA,uBACzD,YAAY,KACf,IAAI,EAAE,mBAAW,CAAC,YAAY,CAAC,SAAS,CAAC,IACzC,EAH4D,CAG5D,CAAC;AAEH,kBAAe,aAAa,CAAC","sourcesContent":["import { fp, removeString } from \"@project/utils\";\r\nimport { IRouter } from \"../types\";\r\n\r\nconst { chaining, map, split, join } = fp;\r\n\r\n// const removeQuestionMark = removeString(\"?\");\r\n// const removeQuestionMarkFromFindIndexToEnd = removeQuestionMark(\"end\");\r\n\r\n// \"(\"를 제거하는 함수 생성\r\nconst removeBraces = removeString(\"(\");\r\n// \"(\"가 발견된 지점부터 문자열 끝까지 삭제하는 함수 생성\r\nconst removeBracesFromFindIndexToEnd = removeBraces(\"end\");\r\n\r\n// export const extractParams = <P extends string>(path: P): ParamsFromPath<P> => {\r\n//   return chaining(\r\n//     split(\"/\"),\r\n//     filter(includes(\":\")),\r\n//     map(replace(\":\", \"\")),\r\n//     map(removeQuestionMarkFromFindIndexToEnd),\r\n//     map(removeBracesFromFindIndexToEnd),\r\n//     keyBy(identity),\r\n//   )(path);\r\n// };\r\n\r\n// export const extractQueryString = (value: string) =>\r\n//   chaining(split(\"?\"), filter(includes(\"&\")))(value);\r\n\r\nexport const extractPath = (value: string) =>\r\n  chaining(split(\"/\"), map(removeBracesFromFindIndexToEnd), join(\"/\"))(value);\r\n\r\n/**\r\n * 원하는 route 형태로 변경해주는 함수\r\n * @return {Object}\r\n */\r\nconst routerAdapter = <R extends IRouter>(routerConfig: R) => ({\r\n  ...routerConfig,\r\n  path: extractPath(routerConfig.regexPath),\r\n});\r\n\r\nexport default routerAdapter;\r\n"]}