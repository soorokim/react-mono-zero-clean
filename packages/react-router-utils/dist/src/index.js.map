{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,wCAAoC;AACpC,sDAAgC;AAEhC,qDAAqD;AAE7C,IAAA,SAAS,GAAK,UAAE,UAAP,CAAQ;AAIzB,SAAS,SAAS,CAAoB,YAAe;IACnD,IAAM,YAAY,GAAG,iBAAO,CAAC,YAAY,CAAC,CAAC;IAC3C,IAAI,CAAC,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,QAAQ,CAAA;QAAE,OAAO,YAAY,CAAC;IAEjD,OAAO;IACP,IAAM,eAAe,GAAG,SAAS,CAAC,UAAC,MAAM,IAAK,OAAA,SAAS,CAAC,MAAM,CAAC,EAAjB,CAAiB,EAAE,YAAY,CAAC,QAAQ,CAAC,CAAC;IAExF,IAAM,MAAM,yBACP,YAAY,KACf,QAAQ,EAAE,eAAe,GAC1B,CAAC;IAEF,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,kBAAe,SAAS,CAAC","sourcesContent":["import { fp } from \"@project/utils\";\r\nimport adapter from \"./adapter\";\r\nimport { IRouter, IMapRouterReturn } from \"./types\";\r\n// import { ParamsFromPath } from \"../extract/types\";\r\n\r\nconst { mapValues } = fp;\r\n\r\n// Function Overloading\r\nfunction mapRouter<R extends IRouter>(routerConfig: R): IMapRouterReturn<R>;\r\nfunction mapRouter<R extends IRouter>(routerConfig: R) {\r\n  const adaptedRoute = adapter(routerConfig);\r\n  if (!routerConfig?.children) return adaptedRoute;\r\n\r\n  // 재귀호출\r\n  const mappingChildren = mapValues((router) => mapRouter(router), adaptedRoute.children);\r\n\r\n  const result = {\r\n    ...adaptedRoute,\r\n    children: mappingChildren,\r\n  };\r\n\r\n  return result;\r\n}\r\n\r\nexport default mapRouter;\r\n"]}