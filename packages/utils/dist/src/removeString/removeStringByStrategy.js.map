{"version":3,"file":"removeStringByStrategy.js","sourceRoot":"","sources":["../../../src/removeString/removeStringByStrategy.ts"],"names":[],"mappings":";;AAEA,mBAAmB;AACnB,mDAAmD;AACnD,IAAM,sBAAsB,GAAG,UAAC,QAA+B,IAAK,OAAA,UAClE,MAAc,EACd,IAAmB,EACnB,SAAiB;IAEjB,oEAAoE;IACpE,oGAAoG;IACpG,kCAAkC;IAClC,IAAM,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IACnC,OAAO,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AACxC,CAAC,EAVmE,CAUnE,CAAC;AAEF,kBAAe,sBAAsB,CAAC","sourcesContent":["import { TStringRemove, TStringRemoveStrategy } from \"./types\";\r\n\r\n// 전략은 주입받는 형식으로 변경\r\n// if~else로 작성할시 새로운 전략이 추가될때마다 파일을 수정해야하는 번거로움이 있음\r\nconst removeStringByStrategy = (strategy: TStringRemoveStrategy) => (\r\n  target: string,\r\n  type: TStringRemove,\r\n  findIndex: number,\r\n) => {\r\n  // if(type === \"start\" ) target.slice(findIndex + 1, target.length);\r\n  // else if(type === \"base\") target.slice(0, findIndex) + target.slice(findIndex + 1, target.length);\r\n  // else target.slice(0, findIndex)\r\n  const strategyFnc = strategy[type];\r\n  return strategyFnc(target, findIndex);\r\n};\r\n\r\nexport default removeStringByStrategy;\r\n"]}