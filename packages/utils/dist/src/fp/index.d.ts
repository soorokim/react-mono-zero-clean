import _ from "lodash/fp";
declare const mixin: {
    add: _.LodashAdd;
    after: _.LodashAfter;
    all: _.LodashEvery;
    allPass: _.LodashOverEvery;
    always: _.LodashConstant;
    any: _.LodashSome;
    anyPass: _.LodashOverSome;
    apply: _.LodashApply;
    ary: _.LodashAry;
    assign: _.LodashAssign;
    assignAll: _.LodashAssignAll;
    assignAllWith: _.LodashAssignAllWith;
    assignIn: _.LodashAssignIn;
    assignInAll: _.LodashAssignInAll;
    assignInAllWith: _.LodashAssignInAllWith;
    assignInWith: _.LodashAssignInWith;
    assignWith: _.LodashAssignWith;
    assoc: _.LodashSet;
    assocPath: _.LodashSet;
    at: _.LodashAt;
    attempt: _.LodashAttempt;
    before: _.LodashBefore;
    bind: _.LodashBind;
    bindAll: _.LodashBindAll;
    bindKey: _.LodashBindKey;
    camelCase: _.LodashCamelCase;
    capitalize: _.LodashCapitalize;
    castArray: _.LodashCastArray;
    ceil: _.LodashCeil;
    chunk: _.LodashChunk;
    clamp: _.LodashClamp;
    clone: _.LodashClone;
    cloneDeep: _.LodashCloneDeep;
    cloneDeepWith: _.LodashCloneDeepWith;
    cloneWith: _.LodashCloneWith;
    compact: _.LodashCompact;
    complement: _.LodashNegate;
    compose: _.LodashFlowRight;
    concat: _.LodashConcat;
    cond: _.LodashCond;
    conforms: _.LodashConformsTo;
    conformsTo: _.LodashConformsTo;
    constant: _.LodashConstant;
    contains: _.LodashContains;
    countBy: _.LodashCountBy;
    create: _.LodashCreate;
    curry: _.LodashCurry;
    curryN: _.LodashCurryN;
    curryRight: _.LodashCurryRight;
    curryRightN: _.LodashCurryRightN;
    debounce: _.LodashDebounce;
    deburr: _.LodashDeburr;
    defaults: _.LodashDefaults;
    defaultsAll: _.LodashDefaultsAll;
    defaultsDeep: _.LodashDefaultsDeep;
    defaultsDeepAll: _.LodashDefaultsDeepAll;
    defaultTo: _.LodashDefaultTo;
    defer: _.LodashDefer;
    delay: _.LodashDelay;
    difference: _.LodashDifference;
    differenceBy: _.LodashDifferenceBy;
    differenceWith: _.LodashDifferenceWith;
    dissoc: _.LodashUnset;
    dissocPath: _.LodashUnset;
    divide: _.LodashDivide;
    drop: _.LodashDrop;
    dropLast: _.LodashDropRight;
    dropLastWhile: _.LodashDropRightWhile;
    dropRight: _.LodashDropRight;
    dropRightWhile: _.LodashDropRightWhile;
    dropWhile: _.LodashDropWhile;
    each: _.LodashForEach;
    eachRight: _.LodashForEachRight;
    endsWith: _.LodashEndsWith;
    entries: _.LodashToPairs;
    entriesIn: _.LodashToPairsIn;
    eq: _.LodashEq;
    equals: _.LodashIsEqual;
    escape: _.LodashEscape;
    escapeRegExp: _.LodashEscapeRegExp;
    every: _.LodashEvery;
    extend: _.LodashExtend;
    extendAll: _.LodashExtendAll;
    extendAllWith: _.LodashExtendAllWith;
    extendWith: _.LodashExtendWith;
    F: _.LodashStubFalse;
    fill: _.LodashFill;
    filter: _.LodashFilter;
    find: _.LodashFind;
    findFrom: _.LodashFindFrom;
    findIndex: _.LodashFindIndex;
    findIndexFrom: _.LodashFindIndexFrom;
    findKey: _.LodashFindKey;
    findLast: _.LodashFindLast;
    findLastFrom: _.LodashFindLastFrom;
    findLastIndex: _.LodashFindLastIndex;
    findLastIndexFrom: _.LodashFindLastIndexFrom;
    findLastKey: _.LodashFindLastKey;
    first: _.LodashHead;
    flatMap: _.LodashFlatMap;
    flatMapDeep: _.LodashFlatMapDeep;
    flatMapDepth: _.LodashFlatMapDepth;
    flatten: _.LodashFlatten;
    flattenDeep: _.LodashFlattenDeep;
    flattenDepth: _.LodashFlattenDepth;
    flip: _.LodashFlip;
    floor: _.LodashFloor;
    flowRight: _.LodashFlowRight;
    forEach: _.LodashForEach;
    forEachRight: _.LodashForEachRight;
    forIn: _.LodashForIn;
    forInRight: _.LodashForInRight;
    forOwn: _.LodashForOwn;
    forOwnRight: _.LodashForOwnRight;
    fromPairs: _.LodashFromPairs;
    functions: _.LodashFunctions;
    functionsIn: _.LodashFunctionsIn;
    get: _.LodashGet;
    getOr: _.LodashGetOr;
    groupBy: _.LodashGroupBy;
    gt: _.LodashGt;
    gte: _.LodashGte;
    has: _.LodashHas;
    hasIn: _.LodashHasIn;
    head: _.LodashHead;
    identical: _.LodashEq;
    identity: _.LodashIdentity;
    includes: _.LodashIncludes;
    includesFrom: _.LodashIncludesFrom;
    indexBy: _.LodashKeyBy;
    indexOf: _.LodashIndexOf;
    indexOfFrom: _.LodashIndexOfFrom;
    init: _.LodashInitial;
    initial: _.LodashInitial;
    inRange: _.LodashInRange;
    intersection: _.LodashIntersection;
    intersectionBy: _.LodashIntersectionBy;
    intersectionWith: _.LodashIntersectionWith;
    invert: _.LodashInvert;
    invertBy: _.LodashInvertBy;
    invertObj: _.LodashInvert;
    invoke: _.LodashInvoke;
    invokeArgs: _.LodashInvokeArgs;
    invokeArgsMap: _.LodashInvokeArgsMap;
    invokeMap: _.LodashInvokeMap;
    isArguments: _.LodashIsArguments;
    isArray: _.LodashIsArray;
    isArrayBuffer: _.LodashIsArrayBuffer;
    isArrayLike: _.LodashIsArrayLike;
    isArrayLikeObject: _.LodashIsArrayLikeObject;
    isBoolean: _.LodashIsBoolean;
    isBuffer: _.LodashIsBuffer;
    isDate: _.LodashIsDate;
    isElement: _.LodashIsElement;
    isEmpty: _.LodashIsEmpty;
    isEqual: _.LodashIsEqual;
    isEqualWith: _.LodashIsEqualWith;
    isError: _.LodashIsError;
    isFinite: _.LodashIsFinite;
    isFunction: _.LodashIsFunction;
    isInteger: _.LodashIsInteger;
    isLength: _.LodashIsLength;
    isMap: _.LodashIsMap;
    isMatch: _.LodashIsMatch;
    isMatchWith: _.LodashIsMatchWith;
    isNaN: _.LodashIsNaN;
    isNative: _.LodashIsNative;
    isNil: _.LodashIsNil;
    isNull: _.LodashIsNull;
    isNumber: _.LodashIsNumber;
    isObject: _.LodashIsObject;
    isObjectLike: _.LodashIsObjectLike;
    isPlainObject: _.LodashIsPlainObject;
    isRegExp: _.LodashIsRegExp;
    isSafeInteger: _.LodashIsSafeInteger;
    isSet: _.LodashIsSet;
    isString: _.LodashIsString;
    isSymbol: _.LodashIsSymbol;
    isTypedArray: _.LodashIsTypedArray;
    isUndefined: _.LodashIsUndefined;
    isWeakMap: _.LodashIsWeakMap;
    isWeakSet: _.LodashIsWeakSet;
    iteratee: _.LodashIteratee;
    join: _.LodashJoin;
    juxt: _.LodashOver;
    kebabCase: _.LodashKebabCase;
    keyBy: _.LodashKeyBy;
    keys: _.LodashKeys;
    keysIn: _.LodashKeysIn;
    last: _.LodashLast;
    lastIndexOf: _.LodashLastIndexOf;
    lastIndexOfFrom: _.LodashLastIndexOfFrom;
    lowerCase: _.LodashLowerCase;
    lowerFirst: _.LodashLowerFirst;
    lt: _.LodashLt;
    lte: _.LodashLte;
    map: _.LodashMap;
    mapKeys: _.LodashMapKeys;
    mapValues: _.LodashMapValues;
    matches: _.LodashIsMatch;
    matchesProperty: _.LodashMatchesProperty;
    max: _.LodashMax;
    maxBy: _.LodashMaxBy;
    mean: _.LodashMean;
    meanBy: _.LodashMeanBy;
    memoize: _.LodashMemoize;
    merge: _.LodashMerge;
    mergeAll: _.LodashMergeAll;
    mergeAllWith: _.LodashMergeAllWith;
    mergeWith: _.LodashMergeWith;
    method: _.LodashMethod;
    methodOf: _.LodashMethodOf;
    min: _.LodashMin;
    minBy: _.LodashMinBy;
    multiply: _.LodashMultiply;
    nAry: _.LodashAry;
    negate: _.LodashNegate;
    noConflict: _.LodashNoConflict;
    noop: _.LodashNoop;
    now: _.LodashNow;
    nth: _.LodashNth;
    nthArg: _.LodashNthArg;
    omit: _.LodashOmit;
    omitAll: _.LodashOmit;
    omitBy: _.LodashOmitBy;
    once: _.LodashOnce;
    orderBy: _.LodashOrderBy;
    over: _.LodashOver;
    overArgs: _.LodashOverArgs;
    overEvery: _.LodashOverEvery;
    overSome: _.LodashOverSome;
    pad: _.LodashPad;
    padChars: _.LodashPadChars;
    padCharsEnd: _.LodashPadCharsEnd;
    padCharsStart: _.LodashPadCharsStart;
    padEnd: _.LodashPadEnd;
    padStart: _.LodashPadStart;
    parseInt: _.LodashParseInt;
    partial: _.LodashPartial;
    partialRight: _.LodashPartialRight;
    partition: _.LodashPartition;
    path: _.LodashPath;
    pathEq: _.LodashMatchesProperty;
    pathOr: _.LodashPathOr;
    paths: _.LodashAt;
    pick: _.LodashPick;
    pickAll: _.LodashPick;
    pickBy: _.LodashPickBy;
    pipe: _.LodashFlow;
    pluck: _.LodashMap;
    prop: _.LodashProp;
    propEq: _.LodashMatchesProperty;
    property: _.LodashProperty;
    propertyOf: _.LodashPropertyOf;
    propOr: _.LodashPropOr;
    props: _.LodashAt;
    pull: _.LodashPull;
    pullAll: _.LodashPullAll;
    pullAllBy: _.LodashPullAllBy;
    pullAllWith: _.LodashPullAllWith;
    pullAt: _.LodashPullAt;
    random: _.LodashRandom;
    range: _.LodashRange;
    rangeRight: _.LodashRangeRight;
    rangeStep: _.LodashRangeStep;
    rangeStepRight: _.LodashRangeStepRight;
    rearg: _.LodashRearg;
    reduce: _.LodashReduce;
    reduceRight: _.LodashReduceRight;
    reject: _.LodashReject;
    remove: _.LodashRemove;
    repeat: _.LodashRepeat;
    replace: _.LodashReplace;
    rest: _.LodashRest;
    restFrom: _.LodashRestFrom;
    result: _.LodashResult;
    reverse: _.LodashReverse;
    round: _.LodashRound;
    runInContext: _.LodashRunInContext;
    sample: _.LodashSample;
    sampleSize: _.LodashSampleSize;
    set: _.LodashSet;
    setWith: _.LodashSetWith;
    shuffle: _.LodashShuffle;
    size: _.LodashSize;
    slice: _.LodashSlice;
    snakeCase: _.LodashSnakeCase;
    some: _.LodashSome;
    sortBy: _.LodashSortBy;
    sortedIndex: _.LodashSortedIndex;
    sortedIndexBy: _.LodashSortedIndexBy;
    sortedIndexOf: _.LodashSortedIndexOf;
    sortedLastIndex: _.LodashSortedLastIndex;
    sortedLastIndexBy: _.LodashSortedLastIndexBy;
    sortedLastIndexOf: _.LodashSortedLastIndexOf;
    sortedUniq: _.LodashSortedUniq;
    sortedUniqBy: _.LodashSortedUniqBy;
    split: _.LodashSplit;
    spread: _.LodashSpread;
    spreadFrom: _.LodashSpreadFrom;
    startCase: _.LodashStartCase;
    startsWith: _.LodashStartsWith;
    stubArray: _.LodashStubArray;
    stubFalse: _.LodashStubFalse;
    stubObject: _.LodashStubObject;
    stubString: _.LodashStubString;
    stubTrue: _.LodashStubTrue;
    subtract: _.LodashSubtract;
    sum: _.LodashSum;
    sumBy: _.LodashSumBy;
    symmetricDifference: _.LodashXor;
    symmetricDifferenceBy: _.LodashXorBy;
    symmetricDifferenceWith: _.LodashXorWith;
    T: _.LodashStubTrue;
    tail: _.LodashTail;
    take: _.LodashTake;
    takeLast: _.LodashTakeRight;
    takeLastWhile: _.LodashTakeRightWhile;
    takeRight: _.LodashTakeRight;
    takeRightWhile: _.LodashTakeRightWhile;
    takeWhile: _.LodashTakeWhile;
    tap: _.LodashTap;
    template: _.LodashTemplate;
    throttle: _.LodashThrottle;
    thru: _.LodashThru;
    times: _.LodashTimes;
    toArray: _.LodashToArray;
    toFinite: _.LodashToFinite;
    toInteger: _.LodashToInteger;
    toLength: _.LodashToLength;
    toLower: _.LodashToLower;
    toNumber: _.LodashToNumber;
    toPairs: _.LodashToPairs;
    toPairsIn: _.LodashToPairsIn;
    toPath: _.LodashToPath;
    toPlainObject: _.LodashToPlainObject;
    toSafeInteger: _.LodashToSafeInteger;
    toString: _.LodashToString;
    toUpper: _.LodashToUpper;
    transform: _.LodashTransform;
    trim: _.LodashTrim;
    trimChars: _.LodashTrimChars;
    trimCharsEnd: _.LodashTrimCharsEnd;
    trimCharsStart: _.LodashTrimCharsStart;
    trimEnd: _.LodashTrimEnd;
    trimStart: _.LodashTrimStart;
    truncate: _.LodashTruncate;
    unapply: _.LodashUnapply;
    unary: _.LodashUnary;
    unescape: _.LodashUnescape;
    union: _.LodashUnion;
    unionBy: _.LodashUnionBy;
    unionWith: _.LodashUnionWith;
    uniq: _.LodashUniq;
    uniqBy: _.LodashUniqBy;
    uniqueId: _.LodashUniqueId;
    uniqWith: _.LodashUniqWith;
    unnest: _.LodashFlatten;
    unset: _.LodashUnset;
    unzip: _.LodashUnzip;
    unzipWith: _.LodashUnzipWith;
    update: _.LodashUpdate;
    updateWith: _.LodashUpdateWith;
    upperCase: _.LodashUpperCase;
    upperFirst: _.LodashUpperFirst;
    useWith: _.LodashOverArgs;
    values: _.LodashValues;
    valuesIn: _.LodashValuesIn;
    where: _.LodashConformsTo;
    whereEq: _.LodashIsMatch;
    without: _.LodashWithout;
    words: _.LodashWords;
    wrap: _.LodashWrap;
    xor: _.LodashXor;
    xorBy: _.LodashXorBy;
    xorWith: _.LodashXorWith;
    zip: _.LodashZip;
    zipAll: _.LodashZipAll;
    zipObj: _.LodashZipObject;
    zipObject: _.LodashZipObject;
    zipObjectDeep: _.LodashZipObjectDeep;
    zipWith: _.LodashZipWith;
    __: import("lodash").LoDashStatic;
    placeholder: import("lodash").LoDashStatic;
    chaining: _.LodashFlow;
};
export default mixin;
//# sourceMappingURL=index.d.ts.map